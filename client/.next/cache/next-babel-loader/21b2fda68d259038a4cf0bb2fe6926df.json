{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\empatica\\\\empatica_delivery\\\\client\\\\components\\\\Nation.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nvar BASE_URL = 'https://rickandmortyapi.com/api/';\n\nvar Nation = /*#__PURE__*/function (_React$Component) {\n  _inherits(Nation, _React$Component);\n\n  var _super = _createSuper(Nation);\n\n  function Nation() {\n    var _this;\n\n    _classCallCheck(this, Nation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchData\", function () {\n      var urls = [\"https://jsonplaceholder.typicode.com/posts/1\", \"https://jsonplaceholder.typicode.com/posts/2\", \"https://jsonplaceholder.typicode.com/posts/3\", \"https://jsonplaceholder.typicode.com/posts/4\", \"https://jsonplaceholder.typicode.com/posts/5\", \"https://jsonplaceholder.typicode.com/posts/6\", \"https://jsonplaceholder.typicode.com/posts/7\", \"https://jsonplaceholder.typicode.com/posts/8\"];\n      var allRequests = urls.map(function (url) {\n        return fetch(url).then(function (response) {\n          return response.json();\n        });\n      });\n      return Promise.all(allRequests);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loading: true,\n      person: null\n    });\n\n    return _this;\n  }\n\n  _createClass(Nation, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var url, response, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\";\n                _context.next = 3;\n                return fetch(url);\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.json();\n\n              case 6:\n                data = _context.sent;\n                this.setState({\n                  person: data.results[0].address_components[6],\n                  loading: false\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 16\n          }\n        }, \"loading...\");\n      }\n\n      if (!this.state.person) {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 16\n          }\n        }, \"didn't get a person\");\n      }\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, this.state.person.long_name), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, this.props.data.downloads[1].app_id, \".\"));\n    }\n  }]);\n\n  return Nation;\n}(React.Component);\n\nexport { Nation as default };","map":{"version":3,"sources":["C:/Users/Alex/Desktop/empatica/empatica_delivery/client/components/Nation.js"],"names":["React","BASE_URL","Nation","urls","allRequests","map","url","fetch","then","response","json","Promise","all","loading","person","data","setState","results","address_components","state","long_name","props","downloads","app_id","Component"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,IAAMC,QAAQ,GAAG,kCAAjB;;IAKqBC,M;;;;;;;;;;;;;;;;gEAGL,YAAM;AACd,UAAMC,IAAI,GAAG,CACb,8CADa,EAEb,8CAFa,EAGb,8CAHa,EAIb,8CAJa,EAKb,8CALa,EAMb,8CANa,EAOb,8CAPa,EAQb,8CARa,CAAb;AAWA,UAAMC,WAAW,GAAGD,IAAI,CAACE,GAAL,CAAS,UAAAC,GAAG;AAAA,eAChCC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,SAAxB,CADgC;AAAA,OAAZ,CAApB;AAIA,aAAOC,OAAO,CAACC,GAAR,CAAYR,WAAZ,CAAP;AACH,K;;4DAMO;AACNS,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,MAAM,EAAE;AAFF,K;;;;;;;;;;;;;;AAMAR,gBAAAA,G,GAAM,2H;;uBACWC,KAAK,CAACD,GAAD,C;;;AAAtBG,gBAAAA,Q;;uBACaA,QAAQ,CAACC,IAAT,E;;;AAAbK,gBAAAA,I;AAEN,qBAAKC,QAAL,CAAc;AAAEF,kBAAAA,MAAM,EAAEC,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBC,kBAAhB,CAAmC,CAAnC,CAAV;AAAiDL,kBAAAA,OAAO,EAAE;AAA1D,iBAAd;;;;;;;;;;;;;;;;;;6BAIF;AACE,UAAI,KAAKM,KAAL,CAAWN,OAAf,EAAwB;AACtB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD;;AAED,UAAI,CAAC,KAAKM,KAAL,CAAWL,MAAhB,EAAwB;AACtB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKK,KAAL,CAAWL,MAAX,CAAkBM,SAAxB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKC,KAAL,CAAWN,IAAX,CAAgBO,SAAhB,CAA0B,CAA1B,EAA6BC,MAAnC,MAFF,CADF;AAMD;;;;EAvD+BvB,KAAK,CAACwB,S;;SAArBtB,M","sourcesContent":["import React from 'react'\r\n\r\n\r\n\r\nconst BASE_URL = 'https://rickandmortyapi.com/api/';\r\n\r\n\r\n\r\n\r\nexport default class Nation extends React.Component {\r\n\r\n    //start - Multiple api calls\r\n    fetchData = () => {\r\n        const urls = [\r\n        \"https://jsonplaceholder.typicode.com/posts/1\",\r\n        \"https://jsonplaceholder.typicode.com/posts/2\",\r\n        \"https://jsonplaceholder.typicode.com/posts/3\",\r\n        \"https://jsonplaceholder.typicode.com/posts/4\",\r\n        \"https://jsonplaceholder.typicode.com/posts/5\",\r\n        \"https://jsonplaceholder.typicode.com/posts/6\",\r\n        \"https://jsonplaceholder.typicode.com/posts/7\",\r\n        \"https://jsonplaceholder.typicode.com/posts/8\"\r\n        ];\r\n    \r\n        const allRequests = urls.map(url => \r\n        fetch(url).then(response => response.json())\r\n        );\r\n    \r\n        return Promise.all(allRequests);\r\n    }\r\n\r\n\r\n\r\n    //end\r\n\r\n    state = {\r\n      loading: true,\r\n      person: null\r\n    };\r\n  \r\n    async componentDidMount() {\r\n      const url = \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\";\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n\r\n      this.setState({ person: data.results[0].address_components[6], loading: false });\r\n    }\r\n  \r\n    render() \r\n    {\r\n      if (this.state.loading) {\r\n        return <div>loading...</div>;\r\n      }\r\n  \r\n      if (!this.state.person) {\r\n        return <div>didn't get a person</div>;\r\n      }\r\n  \r\n      return (\r\n        <div>\r\n          <div>{this.state.person.long_name}</div>\r\n          <div>{this.props.data.downloads[1].app_id}.</div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}