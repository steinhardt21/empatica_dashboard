{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\empatica\\\\empatica_delivery\\\\client\\\\components\\\\Downloads.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query DownloadsQuery {\\n    downloads\\n    {\\n        app_id\\n        longitude\\n        latitude\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react'; //make the query\n\nimport gpl from 'graphql-tag';\nimport { Query } from 'react-apollo';\nvar DOWNLOADS_QUERY = gpl(_templateObject());\nexport var downloads = /*#__PURE__*/function (_Component) {\n  _inherits(downloads, _Component);\n\n  var _super = _createSuper(downloads);\n\n  function downloads() {\n    _classCallCheck(this, downloads);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(downloads, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, \"Test\"), __jsx(Query, {\n        query: DOWNLOADS_QUERY,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, function (_ref) {\n        var loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n        if (loading) return __jsx(\"h4\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 48\n          }\n        }, \"Loading ...\");\n        if (error) console.log(error);\n        console.log(data);\n        return __jsx(\"h1\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 36\n          }\n        }, \"test\");\n      }));\n    }\n  }]);\n\n  return downloads;\n}(Component);\nexport default downloads;","map":{"version":3,"sources":["C:/Users/Alex/Desktop/empatica/empatica_delivery/client/components/Downloads.js"],"names":["React","Component","gpl","Query","DOWNLOADS_QUERY","downloads","loading","error","data","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,KAAR,QAAoB,cAApB;AAEA,IAAMC,eAAe,GAAGF,GAAH,mBAArB;AAWA,WAAaG,SAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,MAAC,KAAD;AAAO,QAAA,KAAK,EAAGD,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,gBAA4B;AAAA,YAA1BE,OAA0B,QAA1BA,OAA0B;AAAA,YAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,YAAVC,IAAU,QAAVA,IAAU;AACxB,YAAGF,OAAH,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACZ,YAAGC,KAAH,EAAUE,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEVE,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,OATT,CAFJ,CADJ;AAiBH;AAnBL;;AAAA;AAAA,EAA+BP,SAA/B;AAsBA,eAAeI,SAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\n//make the query\r\nimport gpl from 'graphql-tag';\r\nimport {Query} from 'react-apollo';\r\n\r\nconst DOWNLOADS_QUERY = gpl`\r\n  query DownloadsQuery {\r\n    downloads\r\n    {\r\n        app_id\r\n        longitude\r\n        latitude\r\n    }\r\n  }\r\n`;\r\n\r\nexport class downloads extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Test</p>\r\n                <Query query= {DOWNLOADS_QUERY}>\r\n                    {\r\n                        ({loading, error, data}) => {\r\n                            if(loading) return <h4>Loading ...</h4>\r\n                            if(error) console.log(error)\r\n                            \r\n                            console.log(data);\r\n\r\n                            return <h1>test</h1>\r\n                        }\r\n                    }\r\n                </Query>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default downloads\r\n"]},"metadata":{},"sourceType":"module"}