{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\empatica\\\\empatica_delivery\\\\client\\\\components\\\\Nation.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nvar urls = [];\nvar baseURL = \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\";\n\nvar Nation = /*#__PURE__*/function (_React$Component) {\n  _inherits(Nation, _React$Component);\n\n  var _super = _createSuper(Nation);\n\n  function Nation() {\n    var _this;\n\n    _classCallCheck(this, Nation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loading: true,\n      person: null\n    });\n\n    return _this;\n  }\n\n  _createClass(Nation, [{\n    key: \"render\",\n\n    /*\r\n    state = {\r\n      loading: true,\r\n      person: null\r\n    };\r\n        async componentDidMount() {\r\n      const url = \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\";\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n        this.setState({ person: data.results[0].address_components[6], loading: false });\r\n    }\r\n        render() \r\n    {\r\n      if (this.state.loading) {\r\n        return <div>loading...</div>;\r\n      }\r\n          if (!this.state.person) {\r\n        return <div>didn't get a person</div>;\r\n      }\r\n          return (\r\n        <div>\r\n          <div>{this.state.person.long_name}</div>\r\n          <div>{this.props.data.downloads[1].app_id}.</div>\r\n        </div>\r\n      );\r\n    }\r\n      */\n    value: function render() {\n      // The urls that query the Google API\n      this.props.data.downloads.map(function (download) {\n        return urls.push(\"https://maps.googleapis.com/maps/api/geocode/json?latlng=\" + download.longitude + \",\" + download.latitude + \"&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\");\n      });\n      var allRequests = urls.map(function (url) {\n        return fetch(url).then(function (response) {\n          return response.json();\n        });\n      });\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      });\n      /*\r\n      if (this.state.loading) {\r\n      return <div>loading...</div>;\r\n      }\r\n          if (!this.state.person) {\r\n          return <div>didn't get a person</div>;\r\n      }\r\n          return (\r\n          <div>\r\n          <div>{this.state.person.long_name}</div>\r\n          <div>{this.props.data.downloads[1].app_id}.</div>\r\n          </div>\r\n      );*/\n    }\n  }]);\n\n  return Nation;\n}(React.Component);\n\nexport { Nation as default };","map":{"version":3,"sources":["C:/Users/Alex/Desktop/empatica/empatica_delivery/client/components/Nation.js"],"names":["React","urls","baseURL","Nation","loading","person","props","data","downloads","map","download","push","longitude","latitude","allRequests","url","fetch","then","response","json","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,IAAMC,IAAI,GAAG,EAAb;AACA,IAAMC,OAAO,GAAE,2HAAf;;IAGqBC,M;;;;;;;;;;;;;;;;4DAET;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,MAAM,EAAE;AAFJ,K;;;;;;;;AAOR;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAqCA;AACI;AACA,WAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,CAA0BC,GAA1B,CAA8B,UAAAC,QAAQ;AAAA,eAClCT,IAAI,CAACU,IAAL,CAAU,8DAA6DD,QAAQ,CAACE,SAAtE,GAAkF,GAAlF,GAAuFF,QAAQ,CAACG,QAAhG,GAA2G,8CAArH,CADkC;AAAA,OAAtC;AAKA,UAAIC,WAAW,GAAGb,IAAI,CAACQ,GAAL,CAAS,UAAAM,GAAG;AAAA,eAC1BC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,SAAxB,CAD0B;AAAA,OAAZ,CAAlB;AAMA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAKA;;;;;;;;;;;;;AAeH;;;;EA/E+BnB,KAAK,CAACoB,S;;SAArBjB,M","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst urls = [];\r\nconst baseURL =\"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\";\r\n\r\n\r\nexport default class Nation extends React.Component {\r\n\r\n    state = {\r\n        loading: true,\r\n        person: null\r\n      };\r\n\r\n    \r\n\r\n    /*\r\n    state = {\r\n      loading: true,\r\n      person: null\r\n    };\r\n  \r\n    async componentDidMount() {\r\n      const url = \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\";\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n\r\n      this.setState({ person: data.results[0].address_components[6], loading: false });\r\n    }\r\n  \r\n    render() \r\n    {\r\n      if (this.state.loading) {\r\n        return <div>loading...</div>;\r\n      }\r\n  \r\n      if (!this.state.person) {\r\n        return <div>didn't get a person</div>;\r\n      }\r\n  \r\n      return (\r\n        <div>\r\n          <div>{this.state.person.long_name}</div>\r\n          <div>{this.props.data.downloads[1].app_id}.</div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    */\r\n\r\n\r\n\r\n    render()\r\n    {\r\n        // The urls that query the Google API\r\n        this.props.data.downloads.map(download => (\r\n            urls.push(\"https://maps.googleapis.com/maps/api/geocode/json?latlng=\"+ download.longitude + \",\"+ download.latitude + \"&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\")\r\n        ))\r\n        \r\n        \r\n        var allRequests = urls.map(url => (\r\n            fetch(url).then(response => response.json())\r\n        )) \r\n        \r\n\r\n\r\n        return(\r\n            <div>\r\n\r\n            </div>\r\n        )\r\n        /*\r\n        if (this.state.loading) {\r\n        return <div>loading...</div>;\r\n      }\r\n  \r\n        if (!this.state.person) {\r\n            return <div>didn't get a person</div>;\r\n        }\r\n  \r\n        return (\r\n            <div>\r\n            <div>{this.state.person.long_name}</div>\r\n            <div>{this.props.data.downloads[1].app_id}.</div>\r\n            </div>\r\n        );*/\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}