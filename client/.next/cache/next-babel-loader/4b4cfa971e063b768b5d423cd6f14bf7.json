{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\empatica\\\\empatica_delivery\\\\client\\\\components\\\\Nation.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { response } from 'express';\nvar baseURL = [\"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\", \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\", \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\"];\n\nvar Nation = /*#__PURE__*/function (_React$Component) {\n  _inherits(Nation, _React$Component);\n\n  var _super = _createSuper(Nation);\n\n  function Nation() {\n    _classCallCheck(this, Nation);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Nation, [{\n    key: \"render\",\n\n    /*\r\n    state = {\r\n      loading: true,\r\n      person: null\r\n    };\r\n        async componentDidMount() {\r\n      const url = \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\";\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n        this.setState({ person: data.results[0].address_components[6], loading: false });\r\n    }\r\n        render() \r\n    {\r\n      if (this.state.loading) {\r\n        return <div>loading...</div>;\r\n      }\r\n          if (!this.state.person) {\r\n        return <div>didn't get a person</div>;\r\n      }\r\n          return (\r\n        <div>\r\n          <div>{this.state.person.long_name}</div>\r\n          <div>{this.props.data.downloads[1].app_id}.</div>\r\n        </div>\r\n      );\r\n    }\r\n      */\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, Promise.all(baseURL.map(function (u) {\n        return fetch(u);\n      })).then(function (responses) {\n        return Promise.all(responses.map(function (res) {\n          return res.json();\n        }));\n      }).then(function (texts) {}));\n    }\n  }]);\n\n  return Nation;\n}(React.Component);\n\nexport { Nation as default };","map":{"version":3,"sources":["C:/Users/Alex/Desktop/empatica/empatica_delivery/client/components/Nation.js"],"names":["React","response","baseURL","Nation","Promise","all","map","u","fetch","then","responses","res","json","texts","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAGA,IAAMC,OAAO,GAAG,CACZ,2HADY,EAEZ,2HAFY,EAGZ,2HAHY,CAAhB;;IAOqBC,M;;;;;;;;;;;;;;AAGjB;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAqCA;AACI,aAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQC,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,GAAR,CAAY,UAAAC,CAAC;AAAA,eAAEC,KAAK,CAACD,CAAD,CAAP;AAAA,OAAb,CAAZ,EAAsCE,IAAtC,CAA2C,UAAAC,SAAS;AAAA,eAChDN,OAAO,CAACC,GAAR,CAAYK,SAAS,CAACJ,GAAV,CAAc,UAAAK,GAAG;AAAA,iBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,SAAjB,CAAZ,CADgD;AAAA,OAApD,EAEEH,IAFF,CAEO,UAAAI,KAAK,EAAI,CAGf,CALD,CAFR,CAFJ;AAcH;;;;EAvD+Bb,KAAK,CAACc,S;;SAArBX,M","sourcesContent":["import React from 'react'\r\nimport { response } from 'express';\r\n\r\n\r\nconst baseURL = [\r\n    \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\",\r\n    \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\",\r\n    \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\"\r\n    ];\r\n\r\n\r\nexport default class Nation extends React.Component {\r\n\r\n\r\n    /*\r\n    state = {\r\n      loading: true,\r\n      person: null\r\n    };\r\n  \r\n    async componentDidMount() {\r\n      const url = \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\";\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n\r\n      this.setState({ person: data.results[0].address_components[6], loading: false });\r\n    }\r\n  \r\n    render() \r\n    {\r\n      if (this.state.loading) {\r\n        return <div>loading...</div>;\r\n      }\r\n  \r\n      if (!this.state.person) {\r\n        return <div>didn't get a person</div>;\r\n      }\r\n  \r\n      return (\r\n        <div>\r\n          <div>{this.state.person.long_name}</div>\r\n          <div>{this.props.data.downloads[1].app_id}.</div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    */\r\n\r\n\r\n\r\n    render()\r\n    {\r\n        return(\r\n\r\n            <div>\r\n                {\r\n                    Promise.all(baseURL.map(u=>fetch(u))).then(responses =>\r\n                        Promise.all(responses.map(res => res.json()))\r\n                    ).then(texts => {\r\n                        \r\n\r\n                    })\r\n                    \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}