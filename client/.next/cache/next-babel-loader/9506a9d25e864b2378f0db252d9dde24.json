{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\empatica\\\\empatica_delivery\\\\client\\\\components\\\\DownloadTime.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { render } from 'react-dom';\n\nvar DownloadTime = /*#__PURE__*/function (_React$Component) {\n  _inherits(DownloadTime, _React$Component);\n\n  var _super = _createSuper(DownloadTime);\n\n  function DownloadTime() {\n    _classCallCheck(this, DownloadTime);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DownloadTime, [{\n    key: \"render\",\n\n    /*\r\n    this.props.data.downloads.map(\r\n      )*/\n    // console.log(Data.parse(this.props.data.downloads));\n\n    /*\r\n    let countNation = 0;\r\n    let dataNat = this.state.data;\r\n          let nationDownload = result.map(function(item)\r\n    {\r\n      count = 0;\r\n      for(const it in dataNat)\r\n      {\r\n          if(item == dataNat[it])\r\n          {\r\n              count = count + 1;\r\n          }\r\n      }\r\n      countNation = countNation + 1;\r\n      return (\r\n          <tr>\r\n            <th scope=\"row\">{countNation}</th>\r\n            <td>{item}</td>\r\n            <td>{count}</td>\r\n        </tr>\r\n    )\r\n    \r\n    })\r\n    */\n    value: function render() {\n      var count = 0;\n      console.log(Data.parse(this.props.data.downloads[1]) > Date.parse('12:00:00'));\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return DownloadTime;\n}(React.Component);\n\nexport { DownloadTime as default };","map":{"version":3,"sources":["C:/Users/Alex/Desktop/empatica/empatica_delivery/client/components/DownloadTime.js"],"names":["React","render","DownloadTime","count","console","log","Data","parse","props","data","downloads","Date","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;;IAEqBC,Y;;;;;;;;;;;;;;AAEjB;;;AAQD;;AAGK;;;;;;;;;;;;;;;;;;;;;;;;6BA8BJ;AAEI,UAAIC,KAAK,GAAG,CAAZ;AAEJC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAW,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,CAA0B,CAA1B,CAAX,IAA2CC,IAAI,CAACJ,KAAL,CAAW,UAAX,CAAvD;AAEI,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EApDqCP,KAAK,CAACY,S;;SAA3BV,Y","sourcesContent":["import React from 'react'\r\nimport { render } from 'react-dom'\r\n\r\nexport default class DownloadTime extends React.Component{\r\n    \r\n    /*\r\n    this.props.data.downloads.map(\r\n\r\n    )*/\r\n\r\n\r\n    \r\n\r\n   // console.log(Data.parse(this.props.data.downloads));\r\n\r\n\r\n        /*\r\n\r\n    let countNation = 0;\r\n    let dataNat = this.state.data;\r\n      \r\n      let nationDownload = result.map(function(item)\r\n      {\r\n          count = 0;\r\n          for(const it in dataNat)\r\n          {\r\n              if(item == dataNat[it])\r\n              {\r\n                  count = count + 1;\r\n              }\r\n          }\r\n          countNation = countNation + 1;\r\n\r\n        return (\r\n\r\n            <tr>\r\n                <th scope=\"row\">{countNation}</th>\r\n                <td>{item}</td>\r\n                <td>{count}</td>\r\n            </tr>\r\n        )\r\n        \r\n      })\r\n      */\r\n\r\n    render()\r\n    {\r\n\r\n        let count = 0;\r\n\r\n    console.log(Data.parse(this.props.data.downloads[1]) > Date.parse('12:00:00'));\r\n\r\n        return(\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}