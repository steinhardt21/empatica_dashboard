{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\empatica\\\\empatica_delivery\\\\client\\\\components\\\\Nation.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nconst urls = [];\nconst baseURL = \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\";\nconst nations = [];\nexport default class Nation extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: true,\n      nations: null\n    });\n  }\n\n  /*\r\n  state = {\r\n    loading: true,\r\n    person: null\r\n  };\r\n      async componentDidMount() {\r\n    const url = \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\";\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n      this.setState({ person: data.results[0].address_components[6], loading: false });\r\n  }\r\n      render() \r\n  {\r\n    if (this.state.loading) {\r\n      return <div>loading...</div>;\r\n    }\r\n        if (!this.state.person) {\r\n      return <div>didn't get a person</div>;\r\n    }\r\n        return (\r\n      <div>\r\n        <div>{this.state.person.long_name}</div>\r\n        <div>{this.props.data.downloads[1].app_id}.</div>\r\n      </div>\r\n    );\r\n  }\r\n    */\n  async componentDidMount() {}\n\n  render() {\n    /*\r\n    // The urls that query the Google API\r\n    this.props.data.downloads.map(download => (\r\n        urls.push(\"https://maps.googleapis.com/maps/api/geocode/json?latlng=\"+ download.longitude + \",\"+ download.latitude + \"&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\")\r\n    ))\r\n    \r\n    \r\n    var promises = Promise.all(urls.map(url => (\r\n        fetch(url)\r\n    )))\r\n      promises\r\n        .then((results) =>\r\n            Promise.all(results.map(r => r.json()))\r\n        )\r\n        .then((res) =>(\r\n            res.map(n => \r\n                (\r\n                   console.log(n.results)\r\n                    \r\n                ))\r\n        ))\r\n    */\n\n    /*\r\n    promises\r\n    .then((results) =>\r\n        Promise.all(results.map(r => r.json()\r\n            ))\r\n    )\r\n    .then((res) => (res.map(n =>(\r\n      ))\r\n    ))*/\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, nations.map(nation => __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, \" Test \")));\n    /*\r\n    if (this.state.loading) {\r\n    return <div>loading...</div>;\r\n    }\r\n        if (!this.state.person) {\r\n        return <div>didn't get a person</div>;\r\n    }\r\n        return (\r\n        <div>\r\n        <div>{this.state.person.long_name}</div>\r\n        <div>{this.props.data.downloads[1].app_id}.</div>\r\n        </div>\r\n    );*/\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Alex/Desktop/empatica/empatica_delivery/client/components/Nation.js"],"names":["React","urls","baseURL","nations","Nation","Component","loading","componentDidMount","render","map","nation"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,OAAO,GAAE,2HAAf;AACA,MAAMC,OAAO,GAAE,EAAf;AAEA,eAAe,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AAAA;AAAA;;AAAA,mCAExC;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJH,MAAAA,OAAO,EAAE;AAFL,KAFwC;AAAA;;AAShD;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCJ,QAAMI,iBAAN,GAA0B,CAIzB;;AAGGC,EAAAA,MAAM,GACN;AACI;;;;;;;;;;;;;;;;;;;;;;;AA2BI;;;;;;;;;AAYJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQL,OAAO,CAACM,GAAR,CAAYC,MAAM,IAEd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CAFR,CADJ;AAUA;;;;;;;;;;;;;AAeH;;AApH+C","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst urls = [];\r\nconst baseURL =\"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\";\r\nconst nations =[];\r\n\r\nexport default class Nation extends React.Component {\r\n\r\n    state = {\r\n        loading: true,\r\n        nations: null\r\n      };\r\n\r\n    \r\n\r\n    /*\r\n    state = {\r\n      loading: true,\r\n      person: null\r\n    };\r\n  \r\n    async componentDidMount() {\r\n      const url = \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\";\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n\r\n      this.setState({ person: data.results[0].address_components[6], loading: false });\r\n    }\r\n  \r\n    render() \r\n    {\r\n      if (this.state.loading) {\r\n        return <div>loading...</div>;\r\n      }\r\n  \r\n      if (!this.state.person) {\r\n        return <div>didn't get a person</div>;\r\n      }\r\n  \r\n      return (\r\n        <div>\r\n          <div>{this.state.person.long_name}</div>\r\n          <div>{this.props.data.downloads[1].app_id}.</div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    */\r\n\r\nasync componentDidMount() {\r\n        \r\n        \r\n    \r\n}\r\n\r\n\r\n    render()\r\n    {\r\n        /*\r\n        // The urls that query the Google API\r\n        this.props.data.downloads.map(download => (\r\n            urls.push(\"https://maps.googleapis.com/maps/api/geocode/json?latlng=\"+ download.longitude + \",\"+ download.latitude + \"&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\")\r\n        ))\r\n        \r\n        \r\n        var promises = Promise.all(urls.map(url => (\r\n            fetch(url)\r\n        )))\r\n\r\n        promises\r\n            .then((results) =>\r\n                Promise.all(results.map(r => r.json()))\r\n            )\r\n            .then((res) =>(\r\n                res.map(n => \r\n                    (\r\n\r\n                     console.log(n.results)\r\n                        \r\n                    ))\r\n            ))\r\n        */\r\n    \r\n\r\n\r\n            /*\r\n            promises\r\n            .then((results) =>\r\n                Promise.all(results.map(r => r.json()\r\n                    ))\r\n            )\r\n            .then((res) => (res.map(n =>(\r\n\r\n            ))\r\n            ))*/\r\n\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    nations.map(nation => (\r\n\r\n                        <p> Test </p>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n        /*\r\n        if (this.state.loading) {\r\n        return <div>loading...</div>;\r\n      }\r\n  \r\n        if (!this.state.person) {\r\n            return <div>didn't get a person</div>;\r\n        }\r\n  \r\n        return (\r\n            <div>\r\n            <div>{this.state.person.long_name}</div>\r\n            <div>{this.props.data.downloads[1].app_id}.</div>\r\n            </div>\r\n        );*/\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}