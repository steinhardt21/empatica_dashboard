{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\empatica\\\\empatica_delivery\\\\client\\\\components\\\\DownloadTime.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { render } from 'react-dom';\nlet countMorn = 0;\nlet countEven = 0;\nlet countAfter = 0;\nlet countNi = 0;\nexport default class DownloadTime extends React.Component {\n  constructor(props) {\n    this.state = {\n      countMorning: null //  countAfternoon: null,\n      //  countEvening: null,\n      //  countNight: null\n\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    this.props.data.downloads.map(d => {\n      if (Date.parse(d.downloaded_at) >= Date.parse('06:00:00') && Date.parse(d.downloaded_at) <= Date.parse('12:00:00')) {\n        countMorn = countMorn + 1;\n      } // Downloads in the MORNING\n      else if (Date.parse(d.downloaded_at) > Date.parse('12:00:00') && Date.parse(d.downloaded_at) <= Date.parse('18:00:00')) {\n          countAfter = countAfter + 1;\n        } // Downloads in the AFTERNOON\n        else if (Date.parse(d.downloaded_at) > Date.parse('18:00:00') && Date.parse(d.downloaded_at) <= Date.parse('22:00:00')) {\n            countEven = countEven + 1;\n          } // Downloads in the EVENING\n          else if (Date.parse(d.downloaded_at) > Date.parse('22:00:00') && Date.parse(d.downloaded_at) <= Date.parse('06:00:00')) {\n              countNi = countNi + 1;\n            } // Downloads at NIGHT\n\n    });\n    console.log(Date.parse(this.props.data.downloads[1]) > Date.parse('12:00:00') > true);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Alex/Desktop/empatica/empatica_delivery/client/components/DownloadTime.js"],"names":["React","render","countMorn","countEven","countAfter","countNi","DownloadTime","Component","constructor","props","state","countMorning","componentDidMount","data","downloads","map","d","Date","parse","downloaded_at","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AAMA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,UAAU,GAAG,CAAjB;AACA,IAAIC,OAAO,GAAG,CAAd;AAGA,eAAe,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA0C;AACrDC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,IADL,CAEX;AACA;AACA;;AAJW,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GACjB,CAEC;;AAEDX,EAAAA,MAAM,GACN;AACI,SAAKQ,KAAL,CAAWI,IAAX,CAAgBC,SAAhB,CAA0BC,GAA1B,CAA+BC,CAAC,IAC5B;AACI,UAAIC,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACG,aAAb,KAA+BF,IAAI,CAACC,KAAL,CAAW,UAAX,CAAhC,IAA0DD,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACG,aAAb,KAA+BF,IAAI,CAACC,KAAL,CAAW,UAAX,CAA5F,EACA;AAAChB,QAAAA,SAAS,GAAGA,SAAS,GAAE,CAAvB;AAA0B,OAD3B,CAC4B;AAD5B,WAEK,IAAIe,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACG,aAAb,IAA8BF,IAAI,CAACC,KAAL,CAAW,UAAX,CAA/B,IAAyDD,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACG,aAAb,KAA+BF,IAAI,CAACC,KAAL,CAAW,UAAX,CAA3F,EACL;AAACd,UAAAA,UAAU,GAAGA,UAAU,GAAG,CAA1B;AAA6B,SADzB,CACyB;AADzB,aAEA,IAAKa,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACG,aAAb,IAA8BF,IAAI,CAACC,KAAL,CAAW,UAAX,CAA/B,IAAyDD,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACG,aAAb,KAA+BF,IAAI,CAACC,KAAL,CAAW,UAAX,CAA5F,EACL;AAACf,YAAAA,SAAS,GAAGA,SAAS,GAAG,CAAxB;AAA2B,WADvB,CACwB;AADxB,eAEA,IAAKc,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACG,aAAb,IAA8BF,IAAI,CAACC,KAAL,CAAW,UAAX,CAA/B,IAAyDD,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACG,aAAb,KAA+BF,IAAI,CAACC,KAAL,CAAW,UAAX,CAA5F,EACL;AAACb,cAAAA,OAAO,GAAGA,OAAO,GAAG,CAApB;AAAuB,aAR5B,CAQ6B;;AAC5B,KAVL;AAYJe,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACC,KAAL,CAAW,KAAKT,KAAL,CAAWI,IAAX,CAAgBC,SAAhB,CAA0B,CAA1B,CAAX,IAA2CG,IAAI,CAACC,KAAL,CAAW,UAAX,CAA3C,GAAoE,IAAhF;AAEI,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAnCoD","sourcesContent":["import React from 'react'\r\nimport { render } from 'react-dom'\r\n\r\n\r\n\r\n\r\n\r\nlet countMorn = 0;\r\nlet countEven = 0;\r\nlet countAfter = 0;\r\nlet countNi = 0;\r\n\r\n\r\nexport default class DownloadTime extends React.Component{\r\n    constructor(props)\r\n    {\r\n        this.state = {\r\n            countMorning: null,\r\n          //  countAfternoon: null,\r\n          //  countEvening: null,\r\n          //  countNight: null\r\n        };\r\n    }\r\n    \r\n    componentDidMount()\r\n    {\r\n        \r\n    }\r\n\r\n    render()\r\n    {\r\n        this.props.data.downloads.map( d =>\r\n            {\r\n                if((Date.parse(d.downloaded_at) >= Date.parse('06:00:00'))&&(Date.parse(d.downloaded_at) <= Date.parse('12:00:00')))\r\n                {countMorn = countMorn +1;} // Downloads in the MORNING\r\n                else if((Date.parse(d.downloaded_at) > Date.parse('12:00:00'))&&(Date.parse(d.downloaded_at) <= Date.parse('18:00:00')))\r\n                {countAfter = countAfter + 1;}// Downloads in the AFTERNOON\r\n                else if ((Date.parse(d.downloaded_at) > Date.parse('18:00:00'))&&(Date.parse(d.downloaded_at) <= Date.parse('22:00:00')))\r\n                {countEven = countEven + 1;} // Downloads in the EVENING\r\n                else if ((Date.parse(d.downloaded_at) > Date.parse('22:00:00'))&&(Date.parse(d.downloaded_at) <= Date.parse('06:00:00')))\r\n                {countNi = countNi + 1;} // Downloads at NIGHT\r\n            })\r\n\r\n    console.log(Date.parse(this.props.data.downloads[1]) > Date.parse('12:00:00') > true);\r\n\r\n        return(\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}