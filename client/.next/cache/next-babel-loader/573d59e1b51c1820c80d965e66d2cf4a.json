{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\empatica\\\\empatica_delivery\\\\client\\\\components\\\\Downloads.js\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from 'react'; // the map\n\nimport ReactMapGL, { Marker } from 'react-map-gl'; //make the query\n\nimport gpl from 'graphql-tag';\nimport { Query } from 'react-apollo';\nconst DOWNLOADS_QUERY = gpl`\n  query DownloadsQuery {\n    downloads\n    {\n        app_id\n        longitude\n        latitude\n    }\n  }\n`;\nexport class Downloads extends Component {\n  render() {\n    return __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, __jsx(Query, {\n      query: DOWNLOADS_QUERY,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 48\n        }\n      }, \"Loading ...\");\n      if (error) console.log(error);\n      console.log(data);\n      return __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 36\n        }\n      }, data.downloads);\n    }));\n  }\n\n}\nexport default downloads;","map":{"version":3,"sources":["C:/Users/Alex/Desktop/empatica/empatica_delivery/client/components/Downloads.js"],"names":["React","Component","Fragment","ReactMapGL","Marker","gpl","Query","DOWNLOADS_QUERY","Downloads","render","loading","error","data","console","log","downloads"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C,C,CAEA;;AACA,OAAOC,UAAP,IAAoBC,MAApB,QAAiC,cAAjC,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,KAAR,QAAoB,cAApB;AAEA,MAAMC,eAAe,GAAGF,GAAI;;;;;;;;;CAA5B;AAWA,OAAO,MAAMG,SAAN,SAAwBP,SAAxB,CAAkC;AACrCQ,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,KAAD;AAAO,MAAA,KAAK,EAAGF,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,CAAC;AAACG,MAAAA,OAAD;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA;AAAjB,KAAD,KAA4B;AACxB,UAAGF,OAAH,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACZ,UAAGC,KAAH,EAAUE,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEVE,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,aAAO,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAECA,IAAI,CAACG,SAFN,CAAP;AAKH,KAbT,CADJ,CADJ;AAoBH;;AAtBoC;AAyBzC,eAAeA,SAAf","sourcesContent":["import React, { Component, Fragment} from 'react';\r\n\r\n// the map\r\nimport ReactMapGL, {Marker} from 'react-map-gl';\r\n\r\n//make the query\r\nimport gpl from 'graphql-tag';\r\nimport {Query} from 'react-apollo';\r\n\r\nconst DOWNLOADS_QUERY = gpl`\r\n  query DownloadsQuery {\r\n    downloads\r\n    {\r\n        app_id\r\n        longitude\r\n        latitude\r\n    }\r\n  }\r\n`;\r\n\r\nexport class Downloads extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Query query= {DOWNLOADS_QUERY}>\r\n                    {\r\n                        ({loading, error, data}) => {\r\n                            if(loading) return <p>Loading ...</p>\r\n                            if(error) console.log(error)\r\n                            \r\n                            console.log(data);\r\n\r\n                            return <Fragment>\r\n                                {\r\n                                    data.downloads\r\n                                }\r\n                            </Fragment>\r\n                        }\r\n                    }\r\n                </Query>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default downloads\r\n"]},"metadata":{},"sourceType":"module"}