{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\empatica\\\\empatica_delivery\\\\client\\\\components\\\\DownloadTime.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nlet countMorn = 0;\nlet countEven = 0;\nlet countAfter = 0;\nlet countNi = 0;\nexport default class DownloadTime extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countMorning: 0,\n      countAfternoon: 0,\n      countEvening: 0,\n      countNight: 0,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.data.downloads.map(d => {\n      console.log(\"valutare: \"); // + (Date.parse(d.downloaded_at) >= Date.parse('06:00:00'))&&(Date.parse(d.downloaded_at) <= Date.parse('12:00:00')));\n\n      console.log(Date.parse('06:00:00'));\n      console.log(Date.parse(d.downloaded_at) >= Date.parse('06:00:00') && Date.parse(d.downloaded_at) <= Date.parse('12:00:00'));\n      console.log(Date.parse(d.downloaded_at) > Date.parse('12:00:00') && Date.parse(d.downloaded_at) <= Date.parse('18:00:00'));\n      console.log(Date.parse(d.downloaded_at) > Date.parse('18:00:00') && Date.parse(d.downloaded_at) <= Date.parse('22:00:00'));\n      console.log(Date.parse(d.downloaded_at) > Date.parse('22:00:00') && Date.parse(d.downloaded_at) <= Date.parse('06:00:00'));\n\n      if (Date.parse(d.downloaded_at) >= Date.parse('06:00:00') && Date.parse(d.downloaded_at) <= Date.parse('12:00:00')) {\n        countMorn = countMorn + 1;\n      } // Downloads in the MORNING\n      else if (Date.parse(d.downloaded_at) > Date.parse('12:00:00') && Date.parse(d.downloaded_at) <= Date.parse('18:00:00')) {\n          countAfter = countAfter + 1;\n        } // Downloads in the AFTERNOON\n        else if (Date.parse(d.downloaded_at) > Date.parse('18:00:00') && Date.parse(d.downloaded_at) <= Date.parse('22:00:00')) {\n            countEven = countEven + 1;\n          } // Downloads in the EVENING\n          else if (Date.parse(d.downloaded_at) > Date.parse('22:00:00') && Date.parse(d.downloaded_at) <= Date.parse('06:00:00')) {\n              countNi = countNi + 1;\n            } // Downloads at NIGHT\n\n      /*\r\n      console.log(countMorn);\r\n      console.log(countAfter);\r\n      console.log(countEven);\r\n      console.log(countNi);*/\n\n    });\n    this.setState({\n      countMorning: countMorn,\n      countAfternoon: countAfter,\n      countEvening: countEven,\n      countNight: countNi,\n      loading: false\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }\n      }, \"loading...\");\n    }\n\n    return __jsx(\"table\", {\n      className: \"table table-striped table-bordered table-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, __jsx(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, __jsx(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"#\"), __jsx(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Morning\"), __jsx(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"Afternoon\"), __jsx(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \"Evening\"), __jsx(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Night\"))), __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, __jsx(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \"Downloads\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, this.state.countMorning), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, this.state.countAfternoon), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, this.state.countEvening), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, this.state.countNight))));\n  }\n\n}\n\nfunction dateCompare(time1, time2) {\n  var t1 = new Date();\n  var parts = time1.split(\":\");\n  t1.setHours(parts[0], parts[1], parts[2], 0);\n  var t2 = new Date();\n  parts = time2.split(\":\");\n  t2.setHours(parts[0], parts[1], parts[2], 0); // returns 1 if greater, -1 if less and 0 if the same\n\n  if (t1.getTime() > t2.getTime()) return 1;\n  if (t1.getTime() < t2.getTime()) return -1;\n  return 0;\n}","map":{"version":3,"sources":["C:/Users/Alex/Desktop/empatica/empatica_delivery/client/components/DownloadTime.js"],"names":["React","countMorn","countEven","countAfter","countNi","DownloadTime","Component","constructor","props","state","countMorning","countAfternoon","countEvening","countNight","loading","componentDidMount","data","downloads","map","d","console","log","Date","parse","downloaded_at","setState","render","dateCompare","time1","time2","t1","parts","split","setHours","t2","getTime"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nlet countMorn = 0;\r\nlet countEven = 0;\r\nlet countAfter = 0;\r\nlet countNi = 0;\r\n\r\nexport default class DownloadTime extends React.Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n           countMorning: 0,\r\n           countAfternoon: 0,\r\n           countEvening: 0,\r\n           countNight: 0,\r\n           loading: true\r\n        };\r\n    }\r\n    \r\n    componentDidMount()\r\n    {\r\n        this.props.data.downloads.map( d =>\r\n            {\r\n\r\n                console.log(\"valutare: \"); // + (Date.parse(d.downloaded_at) >= Date.parse('06:00:00'))&&(Date.parse(d.downloaded_at) <= Date.parse('12:00:00')));\r\n                \r\n                console.log(Date.parse('06:00:00'));\r\n                console.log((Date.parse(d.downloaded_at) >= Date.parse('06:00:00'))&&(Date.parse(d.downloaded_at) <= Date.parse('12:00:00')));\r\n            console.log((Date.parse(d.downloaded_at) > Date.parse('12:00:00'))&&(Date.parse(d.downloaded_at) <= Date.parse('18:00:00')));\r\n            console.log((Date.parse(d.downloaded_at) > Date.parse('18:00:00'))&&(Date.parse(d.downloaded_at) <= Date.parse('22:00:00')));\r\n            console.log((Date.parse(d.downloaded_at) > Date.parse('22:00:00'))&&(Date.parse(d.downloaded_at) <= Date.parse('06:00:00')));\r\n\r\n                if((Date.parse(d.downloaded_at) >= Date.parse('06:00:00'))&&(Date.parse(d.downloaded_at) <= Date.parse('12:00:00')))\r\n                {countMorn = countMorn +1;} // Downloads in the MORNING\r\n                else if((Date.parse(d.downloaded_at) > Date.parse('12:00:00'))&&(Date.parse(d.downloaded_at) <= Date.parse('18:00:00')))\r\n                {countAfter = countAfter + 1;}// Downloads in the AFTERNOON\r\n                else if ((Date.parse(d.downloaded_at) > Date.parse('18:00:00'))&&(Date.parse(d.downloaded_at) <= Date.parse('22:00:00')))\r\n                {countEven = countEven + 1;} // Downloads in the EVENING\r\n                else if ((Date.parse(d.downloaded_at) > Date.parse('22:00:00'))&&(Date.parse(d.downloaded_at) <= Date.parse('06:00:00')))\r\n                {countNi = countNi + 1;} // Downloads at NIGHT\r\n\r\n                /*\r\n                console.log(countMorn);\r\n                console.log(countAfter);\r\n                console.log(countEven);\r\n                console.log(countNi);*/\r\n            })\r\n\r\n        this.setState({countMorning: countMorn, countAfternoon: countAfter, countEvening: countEven, countNight: countNi, loading: false});\r\n    }\r\n\r\n    render()\r\n    {\r\n        \r\n           if (this.state.loading) \r\n        {\r\n        return <div>loading...</div>;\r\n        }\r\n\r\n        \r\n        return(\r\n            <table  className=\"table table-striped table-bordered table-sm\">\r\n            <thead>\r\n            <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Morning</th>\r\n                <th scope=\"col\">Afternoon</th>\r\n                <th scope=\"col\">Evening</th>\r\n                <th scope=\"col\">Night</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <th scope=\"row\">Downloads</th>\r\n                    <td>{this.state.countMorning}</td>\r\n                    <td>{this.state.countAfternoon}</td>\r\n                    <td>{this.state.countEvening}</td>\r\n                    <td>{this.state.countNight}</td>\r\n                </tr>\r\n            </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction dateCompare(time1,time2) {\r\n    var t1 = new Date();\r\n    var parts = time1.split(\":\");\r\n    t1.setHours(parts[0],parts[1],parts[2],0);\r\n    var t2 = new Date();\r\n    parts = time2.split(\":\");\r\n    t2.setHours(parts[0],parts[1],parts[2],0);\r\n  \r\n    // returns 1 if greater, -1 if less and 0 if the same\r\n    if (t1.getTime()>t2.getTime()) return 1;\r\n    if (t1.getTime()<t2.getTime()) return -1;\r\n    return 0;\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}