{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\empatica\\\\empatica_delivery\\\\client\\\\components\\\\Nation.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { response } from 'express';\nconst baseURL = [\"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\", \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\", \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\"];\nexport default class Nation extends React.Component {\n  /*\r\n  state = {\r\n    loading: true,\r\n    person: null\r\n  };\r\n      async componentDidMount() {\r\n    const url = \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\";\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n      this.setState({ person: data.results[0].address_components[6], loading: false });\r\n  }\r\n      render() \r\n  {\r\n    if (this.state.loading) {\r\n      return <div>loading...</div>;\r\n    }\r\n        if (!this.state.person) {\r\n      return <div>didn't get a person</div>;\r\n    }\r\n        return (\r\n      <div>\r\n        <div>{this.state.person.long_name}</div>\r\n        <div>{this.props.data.downloads[1].app_id}.</div>\r\n      </div>\r\n    );\r\n  }\r\n    */\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, Promise.all(baseURL.map(u => fetch(u))).then(responses => Promise.all(responses.map(res => res.json()))).then(texts => {\n      ReactDOM.render(__jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }, \" Test\"));\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Alex/Desktop/empatica/empatica_delivery/client/components/Nation.js"],"names":["React","response","baseURL","Nation","Component","render","Promise","all","map","u","fetch","then","responses","res","json","texts","ReactDOM"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAGA,MAAMC,OAAO,GAAG,CACZ,2HADY,EAEZ,2HAFY,EAGZ,2HAHY,CAAhB;AAOA,eAAe,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AAGhD;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCAC,EAAAA,MAAM,GACN;AACI,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQC,OAAO,CAACC,GAAR,CACIL,OAAO,CAACM,GAAR,CAAcC,CAAC,IAAIC,KAAK,CAACD,CAAD,CAAxB,CADJ,EACkCE,IADlC,CACuCC,SAAS,IAExCN,OAAO,CAACC,GAAR,CAAYK,SAAS,CAACJ,GAAV,CAAcK,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAArB,CAAZ,CAHR,EAIEH,IAJF,CAIOI,KAAK,IAAI;AAEZC,MAAAA,QAAQ,CAACX,MAAT,CAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAOH,KAbD,CAFR,CAFJ;AAsBH;;AA/D+C","sourcesContent":["import React from 'react'\r\nimport { response } from 'express';\r\n\r\n\r\nconst baseURL = [\r\n    \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\",\r\n    \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\",\r\n    \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\"\r\n    ];\r\n\r\n\r\nexport default class Nation extends React.Component {\r\n\r\n\r\n    /*\r\n    state = {\r\n      loading: true,\r\n      person: null\r\n    };\r\n  \r\n    async componentDidMount() {\r\n      const url = \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\";\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n\r\n      this.setState({ person: data.results[0].address_components[6], loading: false });\r\n    }\r\n  \r\n    render() \r\n    {\r\n      if (this.state.loading) {\r\n        return <div>loading...</div>;\r\n      }\r\n  \r\n      if (!this.state.person) {\r\n        return <div>didn't get a person</div>;\r\n      }\r\n  \r\n      return (\r\n        <div>\r\n          <div>{this.state.person.long_name}</div>\r\n          <div>{this.props.data.downloads[1].app_id}.</div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    */\r\n\r\n\r\n\r\n    render()\r\n    {\r\n        return(\r\n\r\n            <div>\r\n                {\r\n                    Promise.all(\r\n                        baseURL.map ( u => fetch(u))).then(responses =>\r\n                            \r\n                            Promise.all(responses.map(res => res.json()))\r\n                    ).then(texts => {\r\n                        \r\n                        ReactDOM.render(\r\n\r\n                            <div> Test\r\n                                </div>\r\n\r\n\r\n                        );\r\n                    })\r\n                    \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}