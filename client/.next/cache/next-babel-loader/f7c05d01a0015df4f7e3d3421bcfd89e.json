{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\empatica\\\\empatica_delivery\\\\client\\\\components\\\\Nation.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nconst BASE_URL = 'https://rickandmortyapi.com/api/';\nconst urls = ['https://dog.ceo/api/breeds/list', 'https://dog.ceo/api/breeds/image/random'];\nexport default class Nation extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"fetchData\", () => {\n      const urls = [\"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\", \"hhttps://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\", \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\"];\n      const allRequests = urls.map(url => fetch(url).then(response => response.json()));\n      return Promise.all(allRequests);\n    });\n\n    _defineProperty(this, \"state\", {\n      loading: true,\n      person: null\n    });\n  }\n\n  async componentDidMount() {\n    const url = \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      person: data.results[0].address_components[6],\n      loading: false\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, this.state.person.long_name), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, this.props.data.downloads[1].app_id, \".\"), // use map() to perform a fetch and handle the response for each url\n    Promise.all(urls.map(url => fetch(url).then(checkStatus).then(parseJSON).catch(logError))).then(data => {// do something with the data\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Alex/Desktop/empatica/empatica_delivery/client/components/Nation.js"],"names":["React","BASE_URL","urls","Nation","Component","allRequests","map","url","fetch","then","response","json","Promise","all","loading","person","componentDidMount","data","setState","results","address_components","render","state","long_name","props","downloads","app_id","checkStatus","parseJSON","catch","logError"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,MAAMC,QAAQ,GAAG,kCAAjB;AAIA,MAAMC,IAAI,GAAG,CACT,iCADS,EAET,yCAFS,CAAb;AASA,eAAe,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AAAA;AAAA;;AAAA,uCAGpC,MAAM;AAEd,YAAMF,IAAI,GAAG,CACb,2HADa,EAEb,4HAFa,EAGb,2HAHa,CAAb;AAMA,YAAMG,WAAW,GAAGH,IAAI,CAACI,GAAL,CAASC,GAAG,IAChCC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAA5B,CADoB,CAApB;AAIA,aAAOC,OAAO,CAACC,GAAR,CAAYR,WAAZ,CAAP;AACH,KAhB+C;;AAAA,mCAsBxC;AACNS,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,MAAM,EAAE;AAFF,KAtBwC;AAAA;;AA2BhD,QAAMC,iBAAN,GAA0B;AACxB,UAAMT,GAAG,GAAG,2HAAZ;AACA,UAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACD,GAAD,CAA5B;AACA,UAAMU,IAAI,GAAG,MAAMP,QAAQ,CAACC,IAAT,EAAnB;AAEA,SAAKO,QAAL,CAAc;AAAEH,MAAAA,MAAM,EAAEE,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBC,kBAAhB,CAAmC,CAAnC,CAAV;AAAiDN,MAAAA,OAAO,EAAE;AAA1D,KAAd;AACD;;AAEDO,EAAAA,MAAM,GACN;AAEE,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKC,KAAL,CAAWP,MAAX,CAAkBQ,SAAxB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKC,KAAL,CAAWP,IAAX,CAAgBQ,SAAhB,CAA0B,CAA1B,EAA6BC,MAAnC,MAFF,EAII;AACId,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACI,GAAL,CAASC,GAAG,IACpBC,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMkB,WADN,EAEClB,IAFD,CAEMmB,SAFN,EAGCC,KAHD,CAGOC,QAHP,CADQ,CAAZ,EAMCrB,IAND,CAMMQ,IAAI,IAAI,CACV;AACH,KARD,CALR,CADF;AAkBD;;AAxD+C","sourcesContent":["import React from 'react'\r\n\r\n\r\n\r\nconst BASE_URL = 'https://rickandmortyapi.com/api/';\r\n\r\n\r\n\r\nconst urls = [\r\n    'https://dog.ceo/api/breeds/list',\r\n    'https://dog.ceo/api/breeds/image/random'\r\n  ];\r\n  \r\n \r\n\r\n\r\n\r\nexport default class Nation extends React.Component {\r\n\r\n    //start - Multiple api calls\r\n    fetchData = () => {\r\n\r\n        const urls = [\r\n        \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\",\r\n        \"hhttps://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\",\r\n        \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\"\r\n        ];\r\n    \r\n        const allRequests = urls.map(url => \r\n        fetch(url).then(response => response.json())\r\n        );\r\n    \r\n        return Promise.all(allRequests);\r\n    }\r\n\r\n\r\n\r\n    //end\r\n\r\n    state = {\r\n      loading: true,\r\n      person: null\r\n    };\r\n  \r\n    async componentDidMount() {\r\n      const url = \"https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyD8g2ang82_R7aQG8AdVAJg4jkQ52-cp4E\";\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n\r\n      this.setState({ person: data.results[0].address_components[6], loading: false });\r\n    }\r\n  \r\n    render() \r\n    {\r\n  \r\n      return (\r\n        <div>\r\n          <div>{this.state.person.long_name}</div>\r\n          <div>{this.props.data.downloads[1].app_id}.</div>\r\n\r\n          { // use map() to perform a fetch and handle the response for each url\r\n                Promise.all(urls.map(url =>\r\n                    fetch(url)\r\n                    .then(checkStatus)                 \r\n                    .then(parseJSON)\r\n                    .catch(logError)\r\n                ))\r\n                .then(data => {\r\n                    // do something with the data\r\n                })\r\n             }\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}