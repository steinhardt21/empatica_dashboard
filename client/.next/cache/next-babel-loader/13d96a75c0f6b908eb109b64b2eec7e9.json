{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\empatica\\\\empatica_delivery\\\\client\\\\components\\\\Downloads.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, Fragment } from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl'; // the map\n\nimport Nation from './Nation';\nimport gpl from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport DownloadTime from './DownloadTime'; //The query for the GraphQL server\n\nconst DOWNLOADS_QUERY = gpl`\n  query DownloadsQuery {\n    downloads\n    {\n        app_id\n        longitude\n        latitude\n        downloaded_at\n    }\n  }\n`;\n\nconst fetch = require(\"node-fetch\");\n\nexport class Downloads extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      viewport: {\n        width: '30vw',\n        height: '90vh',\n        latitude: 45.464203,\n        longitude: 9.189982,\n        zoom: 5\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, __jsx(Query, {\n      query: DOWNLOADS_QUERY,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 37\n        }\n      }, \" Loading ...\");\n      if (error) console.log(error); //onsole.log(data);\n\n      return __jsx(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 37\n        }\n      }, __jsx(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 41\n        }\n      }, __jsx(ReactMapGL, _extends({\n        mapStyle: \"mapbox://styles/mapbox/streets-v9\",\n        mapboxApiAccessToken: \"pk.eyJ1IjoiYWxleGVuYXgiLCJhIjoiY2tiMmVmZ2I4MDZ6dTJ1czBwYnpqOGtxcCJ9.IBNl_OPjhbhwcMbTycNL3w\",\n        mapStyle: \"mapbox://styles/alexenax/ckb2fqmm606pj1ir103dxqxdc\",\n        onViewportChange: viewport => this.setState({\n          viewport\n        })\n      }, this.state.viewport, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 45\n        }\n      }), data.downloads.map(download => __jsx(Marker, {\n        key: download.app_id,\n        latitude: download.latitude,\n        longitude: download.longitude,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 53\n        }\n      }, __jsx(\"img\", {\n        src: \"https://www.empatica.com/assets/images/homepage/empatica_red_heart-icn.svg\",\n        alt: \"Home Icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 57\n        }\n      }))))), __jsx(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }\n      }, __jsx(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 41\n        }\n      }, __jsx(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 45\n        }\n      }, __jsx(Nation, {\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 49\n        }\n      }))), __jsx(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 41\n        }\n      }, __jsx(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 45\n        }\n      }, __jsx(DownloadTime, {\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 50\n        }\n      })))));\n    }));\n  }\n\n}\nexport default Downloads;","map":{"version":3,"sources":["C:/Users/Alex/Desktop/empatica/empatica_delivery/client/components/Downloads.js"],"names":["React","Component","Fragment","ReactMapGL","Marker","Nation","gpl","Query","DownloadTime","DOWNLOADS_QUERY","fetch","require","Downloads","viewport","width","height","latitude","longitude","zoom","render","loading","error","data","console","log","setState","state","downloads","map","download","app_id"],"mappings":"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","sourcesContent":["import React, { Component, Fragment} from 'react';\r\nimport ReactMapGL, {Marker} from 'react-map-gl'; // the map\r\nimport Nation from './Nation';\r\nimport gpl from 'graphql-tag';\r\nimport {Query} from 'react-apollo';\r\nimport DownloadTime from './DownloadTime';\r\n\r\n//The query for the GraphQL server\r\nconst DOWNLOADS_QUERY = gpl`\r\n  query DownloadsQuery {\r\n    downloads\r\n    {\r\n        app_id\r\n        longitude\r\n        latitude\r\n        downloaded_at\r\n    }\r\n  }\r\n`;\r\n\r\nconst fetch = require(\"node-fetch\");\r\n\r\nexport class Downloads extends Component {\r\n\r\n    // Initial state fo the map\r\n    state = {\r\n        viewport: {\r\n        width: '30vw',\r\n        height: '90vh',\r\n        latitude: 45.464203,\r\n        longitude: 9.189982,\r\n        zoom: 5\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Query query= {DOWNLOADS_QUERY}>\r\n                    {\r\n                        ({loading, error, data}) => {\r\n                            if(loading) return (\r\n                                    <p> Loading ...\r\n                                        \r\n                                    </p>)\r\n                            if(error) console.log(error)\r\n                            \r\n                            //onsole.log(data);\r\n\r\n                            return (<div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <ReactMapGL\r\n                                                mapStyle=\"mapbox://styles/mapbox/streets-v9\"\r\n                                                mapboxApiAccessToken=\"pk.eyJ1IjoiYWxleGVuYXgiLCJhIjoiY2tiMmVmZ2I4MDZ6dTJ1czBwYnpqOGtxcCJ9.IBNl_OPjhbhwcMbTycNL3w\"\r\n                                                mapStyle=\"mapbox://styles/alexenax/ckb2fqmm606pj1ir103dxqxdc\"\r\n                                                onViewportChange={(viewport) => this.setState({ viewport })}\r\n                                                {...this.state.viewport}\r\n                                            >\r\n                                    \r\n                                            {\r\n                                                data.downloads.map(download => (\r\n                                                    \r\n                                                    <Marker key={download.app_id} \r\n                                                            latitude={download.latitude}\r\n                                                            longitude={download.longitude}\r\n                                                    >\r\n                                                        <img src=\"https://www.empatica.com/assets/images/homepage/empatica_red_heart-icn.svg\" alt=\"Home Icon\"></img>\r\n                                                    </Marker>\r\n                                                ))\r\n                                            }\r\n                                    \r\n                                        </ReactMapGL>\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12\">\r\n                                                <Nation data = {data}/> \r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12\">\r\n                                                 <DownloadTime data = {data}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            );\r\n                        }\r\n                    }\r\n                </Query>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Downloads\r\n"]},"metadata":{},"sourceType":"module"}